name: Build Executables

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,build]"

      - name: Build with PyInstaller
        run: |
          pyi-makespec --onefile --windowed --name mdaviz src/mdaviz/app.py --add-data "src/mdaviz/resources:mdaviz/resources"
          pyinstaller mdaviz.spec

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: mdaviz-windows
          path: dist/mdaviz.exe
          retention-days: 30

  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-latest
    container:
      image: centos:7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install system dependencies
        run: |
          yum update -y
          yum install -y \
            python3 \
            python3-pip \
            python3-devel \
            gcc \
            libX11-devel \
            libXext-devel \
            libXrender-devel \
            libXtst-devel \
            libXi-devel \
            mesa-libGL-devel \
            mesa-libGLU-devel \
            libxcb-devel \
            libxcb-icccm-devel \
            libxcb-image-devel \
            libxcb-keysyms-devel \
            libxcb-randr-devel \
            libxcb-render-util-devel \
            libxcb-xinerama-devel \
            libxcb-xfixes-devel \
            libxkbcommon-devel \
            libxkbcommon-x11-devel

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -e ".[dev,build]"

      - name: Build with PyInstaller
        run: |
          pyi-makespec --onefile --windowed --name mdaviz src/mdaviz/app.py --add-data "src/mdaviz/resources:mdaviz/resources"
          pyinstaller mdaviz.spec

      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: mdaviz-linux
          path: dist/mdaviz
          retention-days: 30

  build-macos:
    name: Build macOS Executable
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,build]"

      - name: Build with PyInstaller
        run: |
          pyi-makespec --onefile --windowed --name mdaviz src/mdaviz/app.py --add-data "src/mdaviz/resources:mdaviz/resources"
          pyinstaller mdaviz.spec

      - name: Upload macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: mdaviz-macos
          path: dist/mdaviz
          retention-days: 30

# Note: Automatic release creation is disabled due to API issues.
# You can manually create releases by downloading artifacts from the Actions page.
#
# create-release:
#   name: Create Release
#   runs-on: ubuntu-latest
#   needs: [build-windows, build-linux, build-macos]
#   if: startsWith(github.ref, 'refs/tags/')
#   steps:
#     - name: Checkout repository
#       uses: actions/checkout@v5
#
#     - name: Download all artifacts
#       uses: actions/download-artifact@v5
#
#     - name: Create release
#       uses: softprops/action-gh-release@v2
#       with:
#         files: |
#           mdaviz-windows/mdaviz.exe
#           mdaviz-linux/mdaviz
#           mdaviz-macos/mdaviz
#         generate_release_notes: true
#         draft: false
#         prerelease: false
#         fail_on_unmatched_files: false
#         token: ${{ secrets.GITHUB_TOKEN }}
