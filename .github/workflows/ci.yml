name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.11"
          - "3.10"
      max-parallel: 5
    env:
      DISPLAY: ":99.0"

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run ruff
        run: |
          ruff check src/
          ruff format --check src/

      - name: Run mypy
        run: |
          mypy src/mdaviz --ignore-missing-imports

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"

      - name: Install Qt6 and X11 dependencies for PyQt6 testing
        run: |
          sudo apt update -y
          sudo apt install -y \
            xvfb \
            x11-utils \
            qt6-base-dev \
            qt6-qmake \
            libqt6gui6 \
            libqt6widgets6 \
            libqt6core6 \
            libqt6test6 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xfixes0 \
            libxkbcommon-x11-0 \
            libqt6dbus6 \
            libqt6network6 \
            libqt6opengl6 \
            libqt6svg6 \
            libqt6svgwidgets6

      - name: Install additional test dependencies
        run: |
          pip install pytest-cov pytest-qt pytest-xvfb

      - name: Verify PyQt6 installation
        run: |
          python -c "from PyQt6.QtWidgets import QApplication; print('PyQt6 installation verified')"
          python -c "from PyQt6.QtCore import QT_VERSION_STR; print(f'Qt version: {QT_VERSION_STR}')"
          python -c "from matplotlib.backends.backend_qtagg import FigureCanvasQTAgg; print('Matplotlib qtagg backend working')"

      # Qt environment variables are now set in the pytest step

      - name: Run tests with pytest
        env:
          QT_QPA_PLATFORM: offscreen
          QT_LOGGING_RULES: "qt.qpa.*=false"
          DISPLAY: ":99.0"
          PYTEST_QT_API: pyqt6
        run: |
          xvfb-run -a pytest src/tests/ --cov=src/mdaviz --cov-report=xml --cov-report=term-missing -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*
