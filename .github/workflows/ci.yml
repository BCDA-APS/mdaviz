name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.11"
          - "3.10"
      max-parallel: 5
    env:
      DISPLAY: ":99.0"

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run ruff
        run: |
          ruff check src/ tests/
          ruff format --check src/ tests/

      - name: Run mypy
        run: |
          mypy src/mdaviz --ignore-missing-imports

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"

      - name: Install OS libraries to test Linux PyQt apps
        run: |
          sudo apt update -y
          sudo apt install -y \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xfixes0 \
            libkbcommon-x11-0 \
            x11-utils \
            xvfb

      - name: Install additional test dependencies
        run: |
          pip install pytest-cov pytest-qt pytest-xvfb

      - name: Run tests with pytest
        run: |
          xvfb-run pytest --cov=src/mdaviz --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*
